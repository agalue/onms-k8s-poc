{{- /* @author Alejandro Galue <agalue@opennms.com> */}}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: grafana
  namespace: {{ .Release.Name }}
  labels:
    app: grafana
spec:
  replicas: {{ .Values.grafana.replicaCount }}
  selector:
    matchLabels:
      app: grafana
  template:
    metadata:
      labels:
        app: grafana
    spec:
      initContainers:
      - name: init # Should run once (regardless of the replicas)
        image: postgres:13
        imagePullPolicy: IfNotPresent
        command:
        - sh
        - /init.sh
        envFrom:
        - configMapRef:
            name: app-settings
        - secretRef:
            name: app-credentials
        env:
        - name: GF_DATABASE_HOST
          value: $(POSTGRES_HOST):$(POSTGRES_PORT)
        - name: GF_SESSION_PROVIDER_CONFIG
          value: dbname=$(GF_DATABASE_NAME) user=$(GF_DATABASE_USER) password=$(GF_DATABASE_PASSWORD) host=$(POSTGRES_HOST) port=$(POSTGRES_PORT) sslmode=$(GF_DATABASE_SSL_MODE)
        volumeMounts:
        - name: scripts
          mountPath: /init.sh
          subPath: grafana-init.sh
      containers:
      - name: grafana-helm
        image: {{ .Values.grafana.image.repository }}:{{ .Values.grafana.image.tag }}
        imagePullPolicy: {{ .Values.grafana.image.imagePullPolicy }}
        ports:
        - containerPort: 3000
          name: http
        envFrom:
        - configMapRef:
            name: app-settings
        - secretRef:
            name: app-credentials
        volumeMounts:
        - name: config
          mountPath: /etc/grafana/provisioning/plugins/helm.yaml
          subPath: plugins.helm.yaml
        - name: config
          mountPath: /etc/grafana/provisioning/datasources/helm.yaml
          subPath: datasources.helm.yaml
        env:
        - name: GF_DATABASE_HOST
          value: $(POSTGRES_HOST):$(POSTGRES_PORT)
        - name: GF_SESSION_PROVIDER_CONFIG
          value: dbname=$(GF_DATABASE_NAME) user=$(GF_DATABASE_USER) password=$(GF_DATABASE_PASSWORD) host=$(POSTGRES_HOST) port=$(POSTGRES_PORT) sslmode=$(GF_DATABASE_SSL_MODE)
        - name: GF_RENDERING_SERVER_URL
          value: http://grafana-renderer.{{ .Release.Name }}:8081/render
        - name: GF_RENDERING_CALLBACK_URL
          value: http://grafana.{{ .Release.Name }}:3000/
        {{- with .Values.grafana.resources }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        readinessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          httpGet:
            path: /
            port: http
          initialDelaySeconds: 30
          periodSeconds: 60
      volumes:
      - name: scripts
        configMap:
          name: app-scripts
      - name: config
        configMap:
          name: helm-config
