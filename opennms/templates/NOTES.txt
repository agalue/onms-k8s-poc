Thank you for installing OpenNMS {{ .Values.opennms.image.tag | default .Values.opennmsVersion }}.

Your release is named "{{ .Release.Name }}", used for:
- Customer/Deployment identifier.
- The namespace for all the resources.
- The sub-domain for the ingress controller.
- The OpenNMS instance ID for your Minions (prefix for Kafka topics).
- Prefix for Elasticsearch indices.
- Prefix for PostgreSQL database names.
- Prefix for Kafka consumer groups.

Resources URLs:

{{- if gt (((.Values.opennms).uiServers).replicaCount|int) 0 }}
OpenNMS UI (read-only): https://onms.{{ include "opennms.domain" . }}/opennms/login.jsp
{{- end }}

{{- if eq (((.Values.opennms).uiServers).replicaCount|int) 0 }}
OpenNMS Core: https://onms-core.{{ include "opennms.domain" . }}/opennms/index.jsp
{{- end }}

{{- if gt ((.Values.grafana).replicaCount|int) 0 }}
Grafana: https://grafana.{{ include "opennms.domain" . }}/
{{- end }}

To learn more about the release, try:

$ helm status {{ .Release.Name }}
$ helm get all {{ .Release.Name }}
$ kubectl get all -n {{ .Release.Name }}

{{- if not .Values.opennms.configuration.alwaysRollDeployment }}

If OpenNMS needs to be restarted to apply configuration changes, you'll need to restart it, e.g.:

$ kubectl rollout restart -n {{ .Release.Name }} statefulset/onms-core
{{- end }}

{{- if .Values.opennms.inspector.enabled }}

The inspector pod is enabled and OpenNMS pod is not running.

This is how you can connect to the inspector pod:

$ kubectl exec -it -n {{ .Release.Name }} pods/inspector -- /bin/bash
{{- end }}