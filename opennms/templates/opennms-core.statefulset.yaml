{{- /* @author Alejandro Galue <agalue@opennms.com> */}}

---
apiVersion: apps/v1
kind: StatefulSet
metadata:
  name: onms-core
  namespace: {{ .Release.Name }}
  labels:
    app: onms-core
    {{- include "opennms.labels" . | nindent 4 }}
spec:
  serviceName: onms-core
  replicas: 1 # DO NOT CHANGE. The solution only allows 1 instance
  selector:
    matchLabels:
      app: onms-core
      {{- include "opennms.selectorLabels" . | nindent 6 }}
  template:
    metadata:
      labels:
        app: onms-core
        {{- include "opennms.selectorLabels" . | nindent 8 }}
    spec:
      securityContext:
        fsGroup: 10001 # Required for Google Fileshare (might impact performance)
      terminationGracePeriodSeconds: 120
      {{- with .Values.imagePullSecrets }}
      imagePullSecrets:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      initContainers:
      # Initializes/Updates OpenNMS Configuration
      # Requires the same image/version used at runtime
      - name: init
        image: {{ .Values.opennms.image.repository }}:{{ .Values.opennms.image.tag | default .Values.opennmsVersion }}
        imagePullPolicy: {{ .Values.opennms.image.imagePullPolicy }}
        command: [ bash, /init.sh ]
        envFrom:
        - configMapRef:
            name: app-settings
        - secretRef:
            name: app-credentials
        env:
        - name: OPENNMS_DATABASE_CONNECTION_MAXPOOL
          value: {{ .Values.opennms.configuration.database.pool_size | default "50" | quote }}
        volumeMounts:
        - name: etc
          mountPath: /opennms-etc # Required by the script
        - name: deploy
          mountPath: /opennms-deploy # Required by the script
        - name: overlay
          mountPath: /opennms-overlay # Required by the script
        - name: scripts
          mountPath: /init.sh
          subPath: onms-core-init.sh
      containers:
      - name: onms
        image: {{ .Values.opennms.image.repository }}:{{ .Values.opennms.image.tag | default .Values.opennmsVersion }}
        imagePullPolicy: {{ .Values.opennms.image.imagePullPolicy }}
        args:
        - -s
        ports:
        - containerPort: 8101
          name: karaf
        - containerPort: 8980
          name: http
        envFrom:
        - configMapRef:
            name: app-settings
        - secretRef:
            name: app-credentials
        volumeMounts:
        {{- if not .Values.opennms.enable_cortex }}
        - name: rrd
          mountPath: /opennms-data/rrd
        {{- end }}
        - name: etc
          mountPath: /opt/opennms/etc
        - name: deploy
          mountPath: /opt/opennms/deploy
        - name: logs
          mountPath: /opt/opennms/logs
        - name: overlay
          mountPath: /opt/opennms-overlay
        - name: jks
          mountPath: /etc/java/jks
        - name: jks
          mountPath: /opt/opennms/.postgresql/root.crt
          subPath: postgresql-ca.crt
        env:
        {{- $opt :=  include "opennms.jvmOptions" . }}
        {{- if .Values.opennms.resources }}
        {{- with .Values.opennms.resources }}
        {{- if ((.requests).memory) }}
        - name: MEM_TOTAL_MB
          valueFrom:
            resourceFieldRef:
              resource: requests.memory
              divisor: 1Mi
        - name: JAVA_OPTS
          value: -Xms$(MEM_TOTAL_MB)m -Xmx$(MEM_TOTAL_MB)m {{ $opt }}
        {{- end }}
        resources:
          {{- toYaml . | nindent 10 }}
        {{- end }}
        {{- else }}
        - name: JAVA_OPTS
          value: {{ $opt }}
        {{- end }}
        startupProbe:
          httpGet:
            path: /opennms/login.jsp
            port: http
          failureThreshold: 30
          periodSeconds: 60
        readinessProbe:
          httpGet:
            path: /opennms/login.jsp
            port: http
          periodSeconds: 15
        livenessProbe:
          httpGet:
            path: /opennms/login.jsp
            port: http
          periodSeconds: 60
      {{- if ((.Values.dependencies).loki).hostname }}
      - name: promtail
        image: grafana/promtail
        args:
        - -config.file=/etc/promtail/promtail.yaml
        volumeMounts:
        - name: logs
          mountPath: /opt/opennms/logs
        - name: promtail
          mountPath: /etc/promtail/promtail.yaml
          subPath: promtail.onms_core.config.yaml
        resources:
          limits:
            cpu: 50m
            memory: 64Mi
      {{- end }}
      volumes:
      - name: deploy
        emptyDir: {}
      - name: overlay
        emptyDir: {}
      - name: logs
        emptyDir: {}
      - name: scripts
        configMap:
          name: app-scripts
      - name: promtail
        configMap:
          name: promtail-config
      - name: jks
        secret:
          secretName: app-jks
      - name: etc
        persistentVolumeClaim:
          claimName: onms-etc-pvc
          readOnly: false
      {{- if not .Values.opennms.enable_cortex }}
      - name: rrd
        persistentVolumeClaim:
          claimName: onms-rrd-pvc
          readOnly: false
      {{- end }}
