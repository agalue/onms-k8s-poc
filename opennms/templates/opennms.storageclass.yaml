# @author Alejandro Galue <agalue@opennms.com>

---
apiVersion: storage.k8s.io/v1
kind: StorageClass
metadata:
  name: onms-share
  labels:
    tier: storage
{{- if eq .Values.environment "aks" }}
provisioner: kubernetes.io/azure-file # Alternatively, we could use file.csi.azure.com
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
mountOptions:
- dir_mode=0755
- file_mode=0644
- uid=10001 # OpenNMS User
- gid=10001 # OpenNMS Group
- mfsymlinks
- cache=strict
- actimeo=30
parameters:
  skuName: Standard_LRS
{{- end }}
{{- if eq .Values.environment "gke" }}
provisioner: filestore.csi.storage.gke.io
volumeBindingMode: WaitForFirstConsumer
allowVolumeExpansion: true
mountOptions:
- dir_mode=0755
- file_mode=0644
- uid=10001 # OpenNMS User
- gid=10001 # OpenNMS Group
parameters:
  tier: standard # standard, premium, or enterprise
  network: default
{{- end }}
{{- if eq .Values.environment "minikube" }}
provisioner: k8s.io/minikube-hostpath
volumeBindingMode: Immediate
allowVolumeExpansion: true
mountOptions:
- dir_mode=0755
- file_mode=0644
- uid=10001
- gid=10001
{{- end }}
